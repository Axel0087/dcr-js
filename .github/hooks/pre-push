#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="https://github.com/Axel0087/dcr-js"
url="https://github.com/Axel0087/dcr-js"

z40=0000000000000000000000000000000000000000

current_branch=$(git symbolic-ref --short head)


echo "running hook";

IFS=' '
while read local_ref local_sha remote_ref remote_sha
do
    echo "Running this here hook!"
	if [ "$local_sha" = $z40 ]
	then
		# Handle delete
	else
        echo "Checking for main!"
        if [[ $current_branch = "YOURBRANCH" ]]; then
            echo "Deploying!"
            yarn workspace app deploy
        fi
	fi
done

exit 0